model Product {
  id              Int        @id @default(autoincrement())
  name            String
  description     String?    @db.Text
  price           Decimal    @db.Decimal(10, 2)
  discountPrice   Decimal?   @db.Decimal(10, 2)
  isAvailable     Boolean    @default(true)
  soldCount       Int        @default(0)
  sku             String?    @unique
  barcode         String?
  attributes      Json?
  stock           Int?
  averageRating   Float      @default(0)
  reviewCount     Int        @default(0)
  isFeatured      Boolean    @default(false)
  isDeleted       Boolean    @default(false)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  // Relations
  vendorId        Int
  vendor          Vendor     @relation(fields: [vendorId], references: [id], onDelete: Cascade)
  categoryId      Int
  category        Category   @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  images          Image[]
  reviews         Review[]
  inventory       Inventory[]

  @@index([name])
  @@index([categoryId])
  @@index([vendorId])
}

model Comment {
  id          Int       @id @default(autoincrement())
  content     String    @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  userId      Int
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  reviewId    Int?      // Optional, links to a specific review
  review      Review?   @relation(fields: [reviewId], references: [id], onDelete: Cascade)

  productId   Int?      // Optional, links to a specific product
  product     Product?  @relation(fields: [productId], references: [id], onDelete: Cascade)

  parentId    Int?      // Self-referencing field for parent comment
  parent      Comment?  @relation("ParentComment", fields: [parentId], references: [id], onDelete: Cascade)
  children    Comment[] @relation("ParentComment")
}



model Review {
  id               Int       @id @default(autoincrement())
  rating           Int       @default(0) // e.g., 1-5 stars
  comment          String?   @db.Text
  title            String?   @db.VarChar(255) // Optional title for the review
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  productId        Int
  product          Product   @relation(fields: [productId], references: [id], onDelete: Cascade)

  userId           Int
  user             User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Inventory {
  id               Int        @id @default(autoincrement())
  stock            Int        @default(0)
  lowStockThreshold Int       @default(10) // Alert threshold for low stock
  restockQuantity  Int?       // Suggested restock quantity
  productId        Int
  product          Product    @relation(fields: [productId], references: [id], onDelete: Cascade)
  warehouseId      Int?       // For multi-location inventory
  warehouse        Warehouse? @relation(fields: [warehouseId], references: [id], onDelete: SetNull)
  updatedAt        DateTime   @updatedAt
}
